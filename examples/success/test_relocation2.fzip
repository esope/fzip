requirements {
  import type F :: S ( λ(a::⋆) => { val L : a val R : a } :: ⋆ => ⋆)
  import val x : ∃ (a::⋆), F a
  export type b :: ⋆
}

ν (a :: ⋆)
  let y = open [a] x in
  Σ [b] (b :: ⋆ = a)
    (y : F b)


